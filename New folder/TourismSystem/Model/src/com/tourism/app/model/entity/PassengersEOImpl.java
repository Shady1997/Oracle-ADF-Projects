package com.tourism.app.model.entity;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 28 09:50:14 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PassengersEOImpl extends EntityImpl {
    
    public void postChanges(TransactionEvent transactionEvent) {
        if ((getPostState() == STATUS_NEW) || (getPostState() == STATUS_MODIFIED)) {
            System.out.println("gggggggggggggggggg");
            ReservationEOImpl myReservation = getReservation();
             /* If there is an associated Reservation */
             if (myReservation != null) {
                 System.out.println("jjjjjjjjjjjjjjjjjjjj");
               /* And if it's post-status is NEW */
               if (myReservation.getPostState() == STATUS_NEW) {
                   System.out.println("ssssssssssssssssssssss");
                 /* Post it first, before posting this entity by calling super below */
                 myReservation.postChanges(transactionEvent);
               }
             }
           }
        super.postChanges(transactionEvent);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PassengersId {
            public Object get(PassengersEOImpl obj) {
                return obj.getPassengersId();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setPassengersId((Number)value);
            }
        }
        ,
        PassengerName {
            public Object get(PassengersEOImpl obj) {
                return obj.getPassengerName();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setPassengerName((String)value);
            }
        }
        ,
        ReservationId {
            public Object get(PassengersEOImpl obj) {
                return obj.getReservationId();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setReservationId((Number)value);
            }
        }
        ,
        Age {
            public Object get(PassengersEOImpl obj) {
                return obj.getAge();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setAge((Number)value);
            }
        }
        ,
        Address {
            public Object get(PassengersEOImpl obj) {
                return obj.getAddress();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        NationalId {
            public Object get(PassengersEOImpl obj) {
                return obj.getNationalId();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setNationalId((Number)value);
            }
        }
        ,
        Job {
            public Object get(PassengersEOImpl obj) {
                return obj.getJob();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setJob((String)value);
            }
        }
        ,
        PhoneNumber {
            public Object get(PassengersEOImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setPhoneNumber((String)value);
            }
        }
        ,
        Reservation {
            public Object get(PassengersEOImpl obj) {
                return obj.getReservation();
            }

            public void put(PassengersEOImpl obj, Object value) {
                obj.setReservation((ReservationEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PassengersEOImpl object);

        public abstract void put(PassengersEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PASSENGERSID = AttributesEnum.PassengersId.index();
    public static final int PASSENGERNAME = AttributesEnum.PassengerName.index();
    public static final int RESERVATIONID = AttributesEnum.ReservationId.index();
    public static final int AGE = AttributesEnum.Age.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int NATIONALID = AttributesEnum.NationalId.index();
    public static final int JOB = AttributesEnum.Job.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int RESERVATION = AttributesEnum.Reservation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PassengersEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.tourism.app.model.entity.PassengersEO");
    }

    /**
     * Gets the attribute value for PassengersId, using the alias name PassengersId.
     * @return the value of PassengersId
     */
    public Number getPassengersId() {
        return (Number)getAttributeInternal(PASSENGERSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PassengersId.
     * @param value value to set the PassengersId
     */
    public void setPassengersId(Number value) {
        setAttributeInternal(PASSENGERSID, value);
    }

    /**
     * Gets the attribute value for PassengerName, using the alias name PassengerName.
     * @return the value of PassengerName
     */
    public String getPassengerName() {
        return (String)getAttributeInternal(PASSENGERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PassengerName.
     * @param value value to set the PassengerName
     */
    public void setPassengerName(String value) {
        setAttributeInternal(PASSENGERNAME, value);
    }

    /**
     * Gets the attribute value for ReservationId, using the alias name ReservationId.
     * @return the value of ReservationId
     */
    public Number getReservationId() {
        return (Number)getAttributeInternal(RESERVATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReservationId.
     * @param value value to set the ReservationId
     */
    public void setReservationId(Number value) {
        setAttributeInternal(RESERVATIONID, value);
    }

    /**
     * Gets the attribute value for Age, using the alias name Age.
     * @return the value of Age
     */
    public Number getAge() {
        return (Number)getAttributeInternal(AGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Age.
     * @param value value to set the Age
     */
    public void setAge(Number value) {
        setAttributeInternal(AGE, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for NationalId, using the alias name NationalId.
     * @return the value of NationalId
     */
    public Number getNationalId() {
        return (Number)getAttributeInternal(NATIONALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NationalId.
     * @param value value to set the NationalId
     */
    public void setNationalId(Number value) {
        setAttributeInternal(NATIONALID, value);
    }

    /**
     * Gets the attribute value for Job, using the alias name Job.
     * @return the value of Job
     */
    public String getJob() {
        return (String)getAttributeInternal(JOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Job.
     * @param value value to set the Job
     */
    public void setJob(String value) {
        setAttributeInternal(JOB, value);
    }

    /**
     * Gets the attribute value for PhoneNumber, using the alias name PhoneNumber.
     * @return the value of PhoneNumber
     */
    public String getPhoneNumber() {
        return (String)getAttributeInternal(PHONENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhoneNumber.
     * @param value value to set the PhoneNumber
     */
    public void setPhoneNumber(String value) {
        setAttributeInternal(PHONENUMBER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public ReservationEOImpl getReservation() {
        return (ReservationEOImpl)getAttributeInternal(RESERVATION);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setReservation(ReservationEOImpl value) {
        setAttributeInternal(RESERVATION, value);
    }


    /**
     * @param passengersId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number passengersId) {
        return new Key(new Object[]{passengersId});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
